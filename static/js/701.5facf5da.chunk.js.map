{"version":3,"file":"static/js/701.5facf5da.chunk.js","mappings":"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","sources":["components/FiltersForm/FiltersForm.styled.jsx","components/FiltersForm/FiltersForm.jsx","pages/Catalog.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { commonInputStyles } from \"components/Modal/BookForm/BookForm.styled\";\nimport { RedButtonStyles } from \"components/AdvertCard/AdvertCard.styled\";\n\nconst commonRadioCheckbox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  padding: 10px;\n  color: var(--text-color);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 14px;\n    padding: 17px;\n  }\n`;\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  padding: 50px 0;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormFilters = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-top: 30px;\n`;\n\nexport const LabelLocation = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n\n  svg {\n    position: absolute;\n    top: 47px;\n    left: 15px;\n    fill: none;\n    stroke: var(--text-color);\n  }\n\n  input {\n    ${commonInputStyles}\n    padding: 15px;\n    padding-left: 40px;\n  }\n`;\n\nexport const FiltersWrap = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const LabelFilters = styled.label`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: var(--text-color);\n\n  hr {\n    opacity: 0.3;\n    background-color: var(--border-color);\n    display: block;\n    margin: 24px 0;\n  }\n`;\n\nexport const FieldSet = styled.fieldset`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border: none;\n  padding: 0;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% - 2 * 10px) / 3);\n  height: 85px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 4 * 10px) / 5);\n    height: 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100% - 2 * 10px) / 3);\n    height: 95px;\n  }\n\n  input {\n    width: 130px;\n    height: 80px;\n    padding: 15px;\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n\n    &:checked + div {\n      border-color: var(--accent-red);\n    }\n  }\n`;\n\nexport const RadioBtn = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const CheckBox = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const SearchButton = styled.button`\n  margin: 0 auto;\n  ${RedButtonStyles}\n  width: 150px;\n\n  @media screen and (min-width: 1440px) {\n    margin: unset;\n  }\n`;\n","import { useState } from \"react\";\nimport { FILTERS_TYPE, FILTERS_EQUIPMENT } from \"constants\";\nimport { LocationIcon } from \"components/icons\";\nimport {\n  FiltersWrap,\n  FormFilters,\n  LabelFilters,\n  LabelLocation,\n  RadioBtn,\n  CheckBox,\n  SearchButton,\n  FieldSet,\n  InputWrap,\n} from \"./FiltersForm.styled\";\nimport { gerAllSearchParams, smoothScrollToTarget } from \"helpers\";\n\nconst FiltersForm = ({ setPage, searchParams, setSearchParams }) => {\n  const [location, setLocation] = useState(\"Ukraine\");\n  const [filterParams, setFilterParams] = useState({});\n\n  const params = {};\n  gerAllSearchParams(searchParams, params);\n\n  const handleFilterAdverts = (e) => {\n    e.preventDefault();\n    setSearchParams({});\n    setPage(1);\n    setSearchParams({ ...filterParams, filter: location });\n    smoothScrollToTarget(\"advertBlock\");\n  };\n\n  return (\n    <FormFilters onSubmit={handleFilterAdverts}>\n      <LabelLocation>\n        Location\n        <input\n          type=\"text\"\n          defaultValue=\"Ukraine, Kyiv\"\n          onChange={({ target }) => setLocation(target.value)}\n        />\n        <LocationIcon width={20} height={20} />\n      </LabelLocation>\n\n      <FiltersWrap>\n        Filters\n        <LabelFilters>\n          Vehicle equipment\n          <hr />\n          <FieldSet>\n            {FILTERS_EQUIPMENT.map(({ name, value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"checkbox\"\n                  name={name}\n                  value={value}\n                  defaultChecked={params[name] === value}\n                  onChange={({ target }) => {\n                    if (target.checked) {\n                      setFilterParams((prev) => ({\n                        ...prev,\n                        [target.name]: target.value,\n                      }));\n                    } else {\n                      setFilterParams((prev) => {\n                        const { [target.name]: removedParam, ...rest } = prev;\n                        return { ...rest };\n                      });\n                    }\n                  }}\n                />\n                <CheckBox>\n                  <Icon width={20} height={20} size={20} /> {text}\n                </CheckBox>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n        <LabelFilters>\n          Vehicle type\n          <hr />\n          <FieldSet>\n            {FILTERS_TYPE.map(({ value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={value}\n                  defaultChecked={params.form === value}\n                  onChange={({ target }) =>\n                    setFilterParams((prev) => ({\n                      ...prev,\n                      form: target.value,\n                    }))\n                  }\n                />\n                <RadioBtn>\n                  <Icon width={20} height={20} /> {text}\n                </RadioBtn>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n      </FiltersWrap>\n\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </FormFilters>\n  );\n};\n\nexport default FiltersForm;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAllAdverts, getTotal } from \"../redux/adverts/operations\";\nimport {\n  selectAdverts,\n  selectIsLoading,\n  selectTotal,\n} from \"../redux/adverts/selectors\";\nimport { LIMIT } from \"constants\";\nimport { MainContainer } from \"layouts/MainContainer\";\nimport Loader from \"components/Loader\";\nimport AdvertCard from \"components/AdvertCard\";\nimport {\n  AdvertsList,\n  CardItem,\n  ListBtnWrap,\n  LoadMoreBtn,\n  NoItemsMsg,\n} from \"components/AdvertCard/AdvertCard.styled\";\nimport \"../helpers/formatDate\";\nimport FiltersForm from \"components/FiltersForm/FiltersForm\";\nimport { CatalogContainer } from \"components/FiltersForm/FiltersForm.styled\";\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const adverts = useSelector(selectAdverts);\n  const total = useSelector(selectTotal);\n\n  useEffect(() => {\n    setShowLoadMore(true);\n\n    if (page >= Math.ceil(total / LIMIT)) {\n      setShowLoadMore(false);\n    }\n\n    dispatch(getTotal(searchParams));\n    dispatch(getAllAdverts({ page, limit: LIMIT, searchParams }));\n  }, [dispatch, page, total, searchParams]);\n\n  const handleLoadMore = () => {\n    if (page >= Math.ceil(total / LIMIT) || adverts.length < LIMIT) {\n      setShowLoadMore(false);\n      return;\n    }\n\n    setShowLoadMore(true);\n    setPage((prev) => prev + 1);\n  };\n\n  return (\n    <>\n      <MainContainer>\n        <CatalogContainer>\n          <FiltersForm\n            setPage={setPage}\n            searchParams={searchParams}\n            setSearchParams={setSearchParams}\n          />\n\n          <ListBtnWrap id=\"advertBlock\">\n            {adverts.length > 0 ? (\n              <AdvertsList>\n                {adverts.map((card) => (\n                  <CardItem key={card._id}>\n                    <AdvertCard card={card} />\n                  </CardItem>\n                ))}\n              </AdvertsList>\n            ) : (\n              <NoItemsMsg>No items</NoItemsMsg>\n            )}\n\n            {showLoadMore && adverts.length > 0 && (\n              <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n                Load more\n              </LoadMoreBtn>\n            )}\n          </ListBtnWrap>\n        </CatalogContainer>\n      </MainContainer>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["commonRadioCheckbox","css","_templateObject","_taggedTemplateLiteral","CatalogContainer","styled","div","_templateObject2","FormFilters","form","_templateObject3","LabelLocation","label","_templateObject4","commonInputStyles","FiltersWrap","_templateObject5","LabelFilters","_templateObject6","FieldSet","fieldset","_templateObject7","InputWrap","_templateObject8","RadioBtn","_templateObject9","CheckBox","_templateObject10","SearchButton","button","_templateObject11","RedButtonStyles","_ref","setPage","searchParams","setSearchParams","location","setLocation","useState","filterParams","setFilterParams","params","gerAllSearchParams","_jsxs","onSubmit","e","preventDefault","filter","smoothScrollToTarget","children","_jsx","type","defaultValue","onChange","_ref2","target","value","LocationIcon","width","height","FILTERS_EQUIPMENT","map","_ref3","i","name","icon","Icon","text","defaultChecked","_ref4","checked","prev","removedParam","rest","size","concat","FILTERS_TYPE","_ref5","_ref6","Catalog","page","useSearchParams","showLoadMore","setShowLoadMore","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","adverts","selectAdverts","total","selectTotal","useEffect","Math","ceil","LIMIT","getTotal","getAllAdverts","limit","_Fragment","MainContainer","FiltersForm","ListBtnWrap","id","length","AdvertsList","card","CardItem","AdvertCard","_id","NoItemsMsg","LoadMoreBtn","onClick","handleLoadMore","Loader"],"sourceRoot":""}