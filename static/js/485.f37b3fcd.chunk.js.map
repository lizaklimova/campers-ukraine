{"version":3,"file":"static/js/485.f37b3fcd.chunk.js","mappings":"+TAIA,MAAMA,GAAsBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,igBA2BlBC,EAAmBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qKAW7BK,EAAcH,EAAAA,GAAOI,KAAIC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0FAOzBQ,EAAkBN,EAAAA,GAAOO,OAAMC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2LAW/BW,EAAgBT,EAAAA,GAAOU,MAAKC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,i5CAkBnCc,EAAAA,IAmDOC,EAAcb,EAAAA,GAAOC,IAAGa,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,2IASxBiB,EAAef,EAAAA,GAAOU,MAAKM,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,6NAc3BmB,EAAWjB,EAAAA,GAAOkB,SAAQC,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,8FAQ1BsB,EAAYpB,EAAAA,GAAOC,IAAGoB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,8kBAgCtBwB,EAAWtB,EAAAA,GAAOC,IAAGsB,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,gBAC9BH,GAGS6B,EAAWxB,EAAAA,GAAOC,IAAGwB,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,gBAC9BH,GAGS+B,EAAc1B,EAAAA,GAAOC,IAAG0B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,wfAM/B8B,EAAAA,I,aC7LN,MAyHA,EAzHoBC,IAAiD,IAAhD,QAAEC,EAAO,aAAEC,EAAY,gBAAEC,GAAiBH,EAC7D,MAAOI,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAAC,GAC5CC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAcD,EAAAA,EAAAA,QAAO,OAG3BE,EAAAA,EAAAA,IAAmBR,EADJ,CAAC,GAuBhB,OACES,EAAAA,EAAAA,MAACrC,EAAW,CAACsC,SArBcC,IAC3BA,EAAEC,iBACFX,EAAgB,CAAC,GACjBF,EAAQ,GACRE,EAAgB,IAAKC,KACrBW,EAAAA,EAAAA,IAAqB,cAAc,EAgBSC,IAAKT,EAASU,SAAA,EACxDN,EAAAA,EAAAA,MAAC/B,EAAa,CAAAqC,SAAA,CAAC,YAEbC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLH,IAAKP,EACLW,YAAY,WACZC,QAASC,EAAAA,GACTC,SAAWC,IACLA,EAAIC,OAAS,GACfpB,GAAiBqB,IAAI,IAAWA,EAAMC,SAAUH,EAAI,GAAGI,SACzD,EAEFC,eAAe,EACfC,MAAM,uBAERZ,EAAAA,EAAAA,KAACa,EAAAA,GAAY,CAACC,MAAO,GAAIC,OAAQ,SAGnCtB,EAAAA,EAAAA,MAAC3B,EAAW,CAAAiC,SAAA,CAAC,WAEXN,EAAAA,EAAAA,MAACzB,EAAY,CAAA+B,SAAA,CAAC,qBAEZC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC9B,EAAQ,CAAA6B,SACNiB,EAAAA,GAAkBC,KAAI,CAAAC,EAAoCC,KAAC,IAApC,KAAEC,EAAI,MAAEV,EAAOW,KAAMC,EAAI,KAAEC,GAAML,EAAA,OACvDzB,EAAAA,EAAAA,MAACpB,EAAS,CAAA0B,SAAA,EACRC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,WACLJ,KAAMA,EACNV,MAAOA,EACPL,SAAUoB,IAAiB,IAAhB,OAAEC,GAAQD,EACfC,EAAOC,QACTxC,GAAiBqB,IAAI,IAChBA,EACH,CAACkB,EAAON,MAAOM,EAAOhB,UAGxBvB,GAAiBqB,IACf,MAAQ,CAACkB,EAAON,MAAOQ,KAAiBC,GAASrB,EACjD,MAAO,IAAKqB,EAAM,GAEtB,KAGJpC,EAAAA,EAAAA,MAAChB,EAAQ,CAAAsB,SAAA,EACPC,EAAAA,EAAAA,KAACsB,EAAI,CAACR,MAAO,GAAIC,OAAQ,GAAIe,KAAM,KAAM,IAAEP,OAClC,GAAAQ,OArBMR,EAAI,KAAAQ,OAAIZ,GAsBf,UAIlB1B,EAAAA,EAAAA,MAACzB,EAAY,CAAA+B,SAAA,CAAC,gBAEZC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC9B,EAAQ,CAAA6B,SACNiC,EAAAA,GAAaf,KAAI,CAAAgB,EAA8Bd,KAAC,IAA9B,MAAET,EAAOW,KAAMC,EAAI,KAAEC,GAAMU,EAAA,OAC5CxC,EAAAA,EAAAA,MAACpB,EAAS,CAAA0B,SAAA,EACRC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,QACLJ,KAAK,OACLV,MAAOA,EACPL,SAAU6B,IAAA,IAAC,OAAER,GAAQQ,EAAA,OACnB/C,GAAiBqB,IAAI,IAChBA,EACHnD,KAAMqE,EAAOhB,SACZ,KAGPjB,EAAAA,EAAAA,MAAClB,EAAQ,CAAAwB,SAAA,EACPC,EAAAA,EAAAA,KAACsB,EAAI,CAACR,MAAO,GAAIC,OAAQ,KAAM,IAAEQ,OACxB,GAAAQ,OAdMR,EAAI,KAAAQ,OAAIZ,GAef,aAMpB1B,EAAAA,EAAAA,MAACd,EAAW,CAAAoB,SAAA,EACVC,EAAAA,EAAAA,KAAA,UAAQwB,KAAK,SAAQzB,SAAC,YACtBC,EAAAA,EAAAA,KAAA,UACEmC,GAAG,eACHX,KAAK,SACL,aAAW,sBACXY,QAhGaC,KAAO,IAADC,EAAAC,EACzB,IAAoB,QAAnBD,EAAGjD,EAASmD,eAAO,IAAAF,OAAA,EAAhBA,EAAkBG,UAAUC,SAASC,IACpB,aAAfA,EAAMnB,MAAsC,UAAfmB,EAAMnB,OACrCmB,EAAMhB,SAAU,EAClB,IAGiB,QAAnBY,EAAAhD,EAAYiD,eAAO,IAAAD,GAAnBA,EAAqBK,WACrB3D,EAAgB,CAAC,GACjBE,EAAgB,CAAC,EAAE,EAuFSY,SACvB,eAIS,E,wBCzGlB,MAmFA,EAnFgB8C,KACd,MAAOC,EAAM/D,IAAWK,EAAAA,EAAAA,UAAS,IAC1BJ,EAAcC,IAAmB8D,EAAAA,EAAAA,OACjCC,EAAcC,IAAmB7D,EAAAA,EAAAA,WAAS,GAE3C8D,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,KACRZ,GAAgB,GAEZH,GAAQgB,KAAKC,KAAKN,EAAQO,EAAAA,KAC5Bf,GAAgB,GAGlBC,GAASe,EAAAA,EAAAA,GAASjF,IAClBkE,GAASgB,EAAAA,EAAAA,GAAc,CAAEpB,OAAMqB,MAAOH,EAAAA,GAAOhF,iBAAgB,GAC5D,CAACkE,EAAUJ,EAAMW,EAAOzE,IAa3B,OACES,EAAAA,EAAAA,MAAA2E,EAAAA,SAAA,CAAArE,SAAA,EACEC,EAAAA,EAAAA,KAACqE,EAAAA,EAAa,CAAAtE,UACZN,EAAAA,EAAAA,MAACzC,EAAgB,CAAA+C,SAAA,EACfC,EAAAA,EAAAA,KAACsE,EAAW,CACVvF,QAASA,EACTC,aAAcA,EACdC,gBAAiBA,IAGlB6D,EAAO,IACNrD,EAAAA,EAAAA,MAAClC,EAAe,CACd4E,GAAG,SACHX,KAAK,SACLY,QAASA,KACPrD,GAASyB,GAASA,EAAO,KACzBX,EAAAA,EAAAA,IAAqB,cAAc,EACnCE,SAAA,EAEFC,EAAAA,EAAAA,KAACuE,EAAAA,IAAW,CAACzC,KAAM,GAAI0C,KAAK,wBAAwB,cAKxD/E,EAAAA,EAAAA,MAACgF,EAAAA,GAAW,CAACtC,GAAG,cAAapC,SAAA,CAC1BwD,EAAQhD,OAAS,GAAe,cAAVoD,GACrB3D,EAAAA,EAAAA,KAAC0E,EAAAA,GAAU,CAAA3E,SAAC,cAEZC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAW,CAAA5E,SACTwD,EAAQtC,KAAK2D,IACZ5E,EAAAA,EAAAA,KAAC6E,EAAAA,GAAQ,CAAA9E,UACPC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAU,CAACF,KAAMA,KADLA,EAAKG,SAOzB/B,IAAiBW,GAASJ,EAAQhD,OAAS,IAC1CP,EAAAA,EAAAA,KAACgF,EAAAA,GAAW,CAACxD,KAAK,SAASY,QAjDhB6C,KACjBnC,GAAQgB,KAAKC,KAAKN,EAAQO,EAAAA,KAAUT,EAAQhD,OAASyD,EAAAA,GACvDf,GAAgB,IAIlBA,GAAgB,GAChBlE,GAASyB,GAASA,EAAO,KACzBX,EAAAA,EAAAA,IAAqB,UAAS,EAyC+BE,SAAC,sBAO3DqD,IAAapD,EAAAA,EAAAA,KAACkF,EAAAA,EAAM,MACpB,C","sources":["components/FiltersForm/FiltersForm.styled.jsx","components/FiltersForm/FiltersForm.jsx","pages/Catalog.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { commonInputStyles } from \"components/Modal/BookForm/BookForm.styled\";\nimport { RedButtonStyles } from \"components/AdvertCard/AdvertCard.styled\";\n\nconst commonRadioCheckbox = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 500;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  padding: 10px;\n  color: var(--text-color);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 14px;\n    padding: 17px;\n  }\n`;\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  padding: 50px 0;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n  }\n`;\n\nexport const FormFilters = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-top: 30px;\n`;\n\nexport const GoToPrevPageBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: -50px;\n  align-self: flex-start;\n`;\n\nexport const LabelLocation = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n\n  svg {\n    position: absolute;\n    top: 45px;\n    left: 15px;\n    fill: none;\n    stroke: var(--text-color);\n  }\n\n  .react-dropdown-select {\n    ${commonInputStyles}\n    padding: 15px;\n    padding-left: 40px;\n    opacity: 1;\n    color: var(--light-text);\n    transition: box-shadow var(--linear-transition);\n    background-color: var(--grey);\n\n    input {\n      color: var(--light-text);\n\n      &::placeholder {\n        color: var(--light-text);\n        opacity: 0.5;\n      }\n    }\n\n    &:focus-within {\n      box-shadow: 0 0 5px var(--accent-red);\n    }\n\n    svg {\n      display: none;\n    }\n  }\n\n  .react-dropdown-select-dropdown {\n    width: 100%;\n    background-color: var(--grey);\n    border-radius: 10px;\n    border: 2px solid var(--accent-red);\n  }\n\n  .react-dropdown-select-item {\n    border-bottom: 1px solid var(--light-text);\n\n    &:hover:not(.react-dropdown-select-item-selected) {\n      color: var(--white);\n      background-color: var(--accent-red);\n      opacity: 0.7;\n    }\n  }\n\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\n  .react-dropdown-select-item.react-dropdown-select-item-active {\n    color: var(--white);\n    font-weight: bold;\n    background-color: var(--accent-red);\n  }\n`;\n\nexport const FiltersWrap = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--light-text);\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const LabelFilters = styled.label`\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.2;\n  color: var(--text-color);\n\n  hr {\n    opacity: 0.3;\n    background-color: var(--border-color);\n    display: block;\n    margin: 24px 0;\n  }\n`;\n\nexport const FieldSet = styled.fieldset`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  border: none;\n  padding: 0;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: calc((100% - 2 * 10px) / 3);\n  height: 85px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 4 * 10px) / 5);\n    height: 95px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100% - 2 * 10px) / 3);\n    height: 95px;\n  }\n\n  input {\n    width: 130px;\n    height: 80px;\n    padding: 15px;\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n\n    &:checked + div {\n      border-color: var(--accent-red);\n    }\n  }\n`;\n\nexport const RadioBtn = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const CheckBox = styled.div`\n  ${commonRadioCheckbox}\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    ${RedButtonStyles}\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      margin: unset;\n    }\n  }\n\n  #reset-button {\n    background-color: var(--grey);\n    color: var(--light-text);\n    width: 150px;\n\n    @media screen and (min-width: 1440px) {\n      &:hover,\n      &:focus {\n        background-color: var(--input-background);\n        color: var(--light-text);\n      }\n    }\n  }\n`;\n","import { useState, useRef } from \"react\";\nimport Select from \"react-dropdown-select\";\nimport { LOCATION_OPTIONS, FILTERS_TYPE, FILTERS_EQUIPMENT } from \"constants\";\nimport { gerAllSearchParams, smoothScrollToTarget } from \"helpers\";\nimport { LocationIcon } from \"components/icons\";\nimport {\n  FiltersWrap,\n  FormFilters,\n  LabelFilters,\n  LabelLocation,\n  RadioBtn,\n  CheckBox,\n  FieldSet,\n  InputWrap,\n  ButtonsWrap,\n} from \"./FiltersForm.styled\";\n\nconst FiltersForm = ({ setPage, searchParams, setSearchParams }) => {\n  const [filterParams, setFilterParams] = useState({});\n  const checkbox = useRef(null);\n  const dropdownRef = useRef(null);\n\n  const params = {};\n  gerAllSearchParams(searchParams, params);\n\n  const handleFilterAdverts = (e) => {\n    e.preventDefault();\n    setSearchParams({});\n    setPage(1);\n    setSearchParams({ ...filterParams });\n    smoothScrollToTarget(\"advertBlock\");\n  };\n\n  const resetFilters = () => {\n    [...checkbox.current?.elements].forEach((input) => {\n      if (input.type === \"checkbox\" || input.type === \"radio\") {\n        input.checked = false;\n      }\n    });\n\n    dropdownRef.current?.clearAll();\n    setSearchParams({});\n    setFilterParams({});\n  };\n\n  return (\n    <FormFilters onSubmit={handleFilterAdverts} ref={checkbox}>\n      <LabelLocation>\n        Location\n        <Select\n          ref={dropdownRef}\n          placeholder=\"Location\"\n          options={LOCATION_OPTIONS}\n          onChange={(arr) => {\n            if (arr.length > 0) {\n              setFilterParams((prev) => ({ ...prev, location: arr[0].value }));\n            }\n          }}\n          closeOnScroll={true}\n          color=\"var(--accent-red)\"\n        />\n        <LocationIcon width={20} height={20} />\n      </LabelLocation>\n\n      <FiltersWrap>\n        Filters\n        <LabelFilters>\n          Vehicle equipment\n          <hr />\n          <FieldSet>\n            {FILTERS_EQUIPMENT.map(({ name, value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"checkbox\"\n                  name={name}\n                  value={value}\n                  onChange={({ target }) => {\n                    if (target.checked) {\n                      setFilterParams((prev) => ({\n                        ...prev,\n                        [target.name]: target.value,\n                      }));\n                    } else {\n                      setFilterParams((prev) => {\n                        const { [target.name]: removedParam, ...rest } = prev;\n                        return { ...rest };\n                      });\n                    }\n                  }}\n                />\n                <CheckBox>\n                  <Icon width={20} height={20} size={20} /> {text}\n                </CheckBox>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n        <LabelFilters>\n          Vehicle type\n          <hr />\n          <FieldSet>\n            {FILTERS_TYPE.map(({ value, icon: Icon, text }, i) => (\n              <InputWrap key={`${text}/${i}`}>\n                <input\n                  type=\"radio\"\n                  name=\"type\"\n                  value={value}\n                  onChange={({ target }) =>\n                    setFilterParams((prev) => ({\n                      ...prev,\n                      form: target.value,\n                    }))\n                  }\n                />\n                <RadioBtn>\n                  <Icon width={20} height={20} /> {text}\n                </RadioBtn>\n              </InputWrap>\n            ))}\n          </FieldSet>\n        </LabelFilters>\n      </FiltersWrap>\n\n      <ButtonsWrap>\n        <button type=\"submit\">Search</button>\n        <button\n          id=\"reset-button\"\n          type=\"button\"\n          aria-label=\"Reset filter fields\"\n          onClick={resetFilters}\n        >\n          Reset\n        </button>\n      </ButtonsWrap>\n    </FormFilters>\n  );\n};\n\nexport default FiltersForm;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { getAllAdverts, getTotal } from \"../redux/adverts/operations\";\nimport {\n  selectAdverts,\n  selectError,\n  selectIsLoading,\n  selectTotal,\n} from \"../redux/adverts/selectors\";\nimport { LIMIT } from \"constants\";\nimport { smoothScrollToTarget } from \"helpers\";\nimport { MainContainer } from \"layouts/MainContainer\";\nimport FiltersForm from \"components/FiltersForm\";\nimport Loader from \"components/Loader\";\nimport AdvertCard from \"components/AdvertCard\";\nimport {\n  AdvertsList,\n  CardItem,\n  ListBtnWrap,\n  LoadMoreBtn,\n  NoItemsMsg,\n} from \"components/AdvertCard/AdvertCard.styled\";\nimport {\n  CatalogContainer,\n  GoToPrevPageBtn,\n} from \"components/FiltersForm/FiltersForm.styled\";\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [showLoadMore, setShowLoadMore] = useState(true);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const adverts = useSelector(selectAdverts);\n  const total = useSelector(selectTotal);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    setShowLoadMore(true);\n\n    if (page >= Math.ceil(total / LIMIT)) {\n      setShowLoadMore(false);\n    }\n\n    dispatch(getTotal(searchParams));\n    dispatch(getAllAdverts({ page, limit: LIMIT, searchParams }));\n  }, [dispatch, page, total, searchParams]);\n\n  const handleLoadMore = () => {\n    if (page >= Math.ceil(total / LIMIT) || adverts.length < LIMIT) {\n      setShowLoadMore(false);\n      return;\n    }\n\n    setShowLoadMore(true);\n    setPage((prev) => prev + 1);\n    smoothScrollToTarget(\"goBack\");\n  };\n\n  return (\n    <>\n      <MainContainer>\n        <CatalogContainer>\n          <FiltersForm\n            setPage={setPage}\n            searchParams={searchParams}\n            setSearchParams={setSearchParams}\n          />\n\n          {page > 1 && (\n            <GoToPrevPageBtn\n              id=\"goBack\"\n              type=\"button\"\n              onClick={() => {\n                setPage((prev) => prev - 1);\n                smoothScrollToTarget(\"advertBlock\");\n              }}\n            >\n              <FaArrowLeft size={20} fill=\"var(--accent-color)\" />\n              Go back\n            </GoToPrevPageBtn>\n          )}\n\n          <ListBtnWrap id=\"advertBlock\">\n            {adverts.length < 0 || error === \"Not found\" ? (\n              <NoItemsMsg>No items</NoItemsMsg>\n            ) : (\n              <AdvertsList>\n                {adverts.map((card) => (\n                  <CardItem key={card._id}>\n                    <AdvertCard card={card} />\n                  </CardItem>\n                ))}\n              </AdvertsList>\n            )}\n\n            {showLoadMore && !error && adverts.length > 0 && (\n              <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\n                Load more\n              </LoadMoreBtn>\n            )}\n          </ListBtnWrap>\n        </CatalogContainer>\n      </MainContainer>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["commonRadioCheckbox","css","_templateObject","_taggedTemplateLiteral","CatalogContainer","styled","div","_templateObject2","FormFilters","form","_templateObject3","GoToPrevPageBtn","button","_templateObject4","LabelLocation","label","_templateObject5","commonInputStyles","FiltersWrap","_templateObject6","LabelFilters","_templateObject7","FieldSet","fieldset","_templateObject8","InputWrap","_templateObject9","RadioBtn","_templateObject10","CheckBox","_templateObject11","ButtonsWrap","_templateObject12","RedButtonStyles","_ref","setPage","searchParams","setSearchParams","filterParams","setFilterParams","useState","checkbox","useRef","dropdownRef","gerAllSearchParams","_jsxs","onSubmit","e","preventDefault","smoothScrollToTarget","ref","children","_jsx","Select","placeholder","options","LOCATION_OPTIONS","onChange","arr","length","prev","location","value","closeOnScroll","color","LocationIcon","width","height","FILTERS_EQUIPMENT","map","_ref2","i","name","icon","Icon","text","type","_ref3","target","checked","removedParam","rest","size","concat","FILTERS_TYPE","_ref4","_ref5","id","onClick","resetFilters","_checkbox$current","_dropdownRef$current","current","elements","forEach","input","clearAll","Catalog","page","useSearchParams","showLoadMore","setShowLoadMore","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","adverts","selectAdverts","total","selectTotal","error","selectError","useEffect","Math","ceil","LIMIT","getTotal","getAllAdverts","limit","_Fragment","MainContainer","FiltersForm","FaArrowLeft","fill","ListBtnWrap","NoItemsMsg","AdvertsList","card","CardItem","AdvertCard","_id","LoadMoreBtn","handleLoadMore","Loader"],"sourceRoot":""}